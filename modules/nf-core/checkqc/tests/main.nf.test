nextflow_process {

    name "Test Process CHECKQC"
    script "../main.nf"
    process "CHECKQC"
    tag "modules"
    tag "modules_nfcore"
    tag "untar"
    tag "checkqc"

    test("homo_sapiens illumina test_interop_bcl2fastqstats_flowcell - QC OK") {
        config "./nextflow.config"

        setup {
            run("UNTAR") {
                script "../../untar/main.nf"
                process {
                    """
                    input[0] = Channel.of([ [], file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/interop_bcl2fastqstats/test_flowcell_stats.tar.gz', checkIfExists: true)])
                    """
                }
            }
        }

        when {
            process {
                """
                    input[0] = UNTAR.out.untar.map{ it[1] }
                    input[1] = []
                """
            }
        }

        then {
            assertAll(
            { assert process.success },
            { assert snapshot(process.out).match() }
          )
        }

    }

    test("homo_sapiens illumina test_interop_bcl2fastqstats_flowcell - QC FAIL") {

        setup {
            run("UNTAR") {
                script "../../untar/main.nf"
                process {
                    """
                    input[0] = Channel.of([ [], file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/interop_bcl2fastqstats/test_flowcell_stats.tar.gz', checkIfExists: true)])
                    """
                }
            }
        }

        when {
            process {
                """
                    input[0] = UNTAR.out.untar.map{ it[1] }
                    input[1] = []
                """
            }
        }

        then {
            assertAll(
            { assert process.success },
            { assert snapshot(process.out).match() }
          )
        }

    }

}
